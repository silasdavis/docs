image: node:9-alpine

stages:
- build
- test
- deploy

variables:
  BUILD_DIR: "./build"
  CLOUDSDK_BIN_PATH: "/root/google-cloud-sdk/bin"
  CLOUDSDK_CORE_DISABLE_PROMPTS: "yes"
  GCS_BUCKET: "sites.monax.io"

build site:
  stage: build
  script:
    - npm install
  cache:
    key: ${CI_BUILD_REF_NAME}
    paths:
      - node_modules
  artifacts:
    paths:
      - node_modules

test site:
  stage: test
  dependencies:
    - build site
  script:
    - npm test

# Deploy jobs
deploy staging:
  stage: deploy
  only:
    - staging
  before_script:
    - apk add --no-cache --update git openssh-client
    - |
      eval $(ssh-agent -s) && \
      echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null && \
      mkdir -p $HOME/.ssh && chmod 700 $HOME/.ssh && \
      echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config && \
      git config --global user.name "Billings, a Bot" && \
      git config --global user.email "billings@monax.io" && \
      url_host=`git remote get-url origin | sed -e "s/https:\/\/gitlab-ci-token:.*@//g"` && \
      git remote set-url origin "https://gitlab-ci-token:${CI_TAG_UPLOAD_TOKEN}@${url_host}"
  script:
    - git checkout production
    - git merge --no-ff staging
    - git push origin production

deploy production:
  stage: deploy
  environment:
    name: production
    url: https://docs.agreements.network
  only:
    - production
  variables:
    SITE_NAME: "docs.agreements.network"
  dependencies:
    - build site
  before_script:
  - apk add --no-cache --update curl bash python
  - |
    curl -sSL https://sdk.cloud.google.com | bash &>/dev/null
    # [csk] I know, I know, but you try it without.... ^^^
    echo $GCS_CLIENT_SECRET > client-secret.json
    $CLOUDSDK_BIN_PATH/gcloud auth activate-service-account --key-file client-secret.json
    rm client-secret.json
  script:
  - npm run-script build
  - |
    $CLOUDSDK_BIN_PATH/gsutil -m \
      rsync -r -d \
      $BUILD_DIR gs://$GCS_BUCKET/$SITE_NAME
