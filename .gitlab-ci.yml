image: node:9-alpine

stages:
- build
- test
- deploy

variables:
  BUILD_DIR: "/build"
  CLOUDSDK_BIN_PATH: "/root/google-cloud-sdk/bin"
  CLOUDSDK_CORE_DISABLE_PROMPTS: "yes"
  GCS_BUCKET: "sites.monax.io"

# Variable packages
.variables_staging: &vars_staging
  only:
    - staging
  variables:
    SITE_NAME: "staging.docs.agreements.network"

.variables_production: &vars_production
  only:
    - production
  variables:
    SITE_NAME: "docs.agreements.network"

build site:
  stage: build
  script:
    - npm install
  cache:
    key: ${CI_BUILD_REF_NAME}
    paths:
      - node_modules
  artifacts:
    paths:
      - node_modules

test site:
  stage: test
  dependencies:
    - build site
  script:
    - npm test
  allow_failure: true #tmp

.deploy_template: &deploy_template
  stage: deploy
  dependencies:
    - build site
  before_script:
  - apk add --no-cache --update bash python
  script:
  - |
    curl -sSL https://sdk.cloud.google.com | bash &>/dev/null
    # [csk] I know, I know, but you try it without.... ^^^
    echo $GCS_CLIENT_SECRET > client-secret.json
    $CLOUDSDK_BIN_PATH/gcloud auth activate-service-account --key-file client-secret.json
    rm client-secret.json
    $CLOUDSDK_BIN_PATH/gsutil -m \
      rsync -r -d \
      $BUILD_DIR gs://$GCS_BUCKET/$SITE_NAME

# Deploy jobs
deploy staging:
  environment:
    name: staging
    url: https://staging.docs.agreements.network
  <<: *vars_staging
  <<: *deploy_template

deploy production:
  environment:
    name: production
    url: https://docs.agreements.network
  <<: *vars_production
  <<: *deploy_template

